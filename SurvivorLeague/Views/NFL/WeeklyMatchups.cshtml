@using SurvivorLeague.Models
@model WeeklyMatchupsViewModel

@{
    ViewBag.Title = "Week " + Model.Week;
    //Layout = "~/Views/Shared/_NFLLayout.cshtml";
}

<hr class="team-colors" />
<h2 class="text-center font-weight-bold">@Model.LeagueName - Week @Model.Week</h2>
<div class="row">
    @for (int x = 1; x <= 17; x++)
    {
        @Html.ActionLink(x.ToString() + "-", "WeeklyMatchups", new { Model.LeagueId, Model.SeasonId, Week = x })
    }
</div>
<hr class="team-colors" />

<div style="text-align:center">
    <img src="~/Images/football-helmet.png" id="helmet" />
    <div class="mt-4" id="weekly-matchups">
        @{
            var weekSelection = Model.SelectedTeams.Where(st => st.Week == Model.Week).SingleOrDefault();
            List<List<PlayerWeekMatchupViewModel>> MatchupsByDate = Model.Matchups.GroupBy(g => g.DateAndTime.Date).Select(m => m.ToList()).OrderBy(o => o.FirstOrDefault().DateAndTime).ToList();
            foreach (var matchupslist in MatchupsByDate)
            {

                <div class="row">

                    @{
                        var dtm = matchupslist.First().DateAndTime;
                        ////string homeOpacity = dtm < DateTime.Now ? "0.5" : "1.0";
                        //var datediff = dtm.Subtract(Convert.ToDateTime("10/1/2017 4:05:00 PM"));
                        //string homeOpacity = datediff < TimeSpan.Zero ? "0.5" : "1.0";
                        //string visitorOpacity = homeOpacity;
                    }
                    <div class="col-12 col-xl-8">
                        <h5>
                            @string.Format("{0} {1}/{2}", dtm.DayOfWeek.ToString().Substring(0, 3).ToUpper(), dtm.Month, dtm.Day)
                        </h5>
                    </div>
                    <div class="col-12">

                        @foreach (var matchup in matchupslist)
                        {
                            string homeClass = "";
                            string visitorClass = "";
                            var selectedTeams = Model.SelectedTeams.Where(st => st.Week <= Model.Week).ToList();

                            if (selectedTeams.Count(st => st.TeamId == matchup.VisitorTeam.Id) > 0)
                            {
                                if (selectedTeams.Single(st => st.TeamId == matchup.VisitorTeam.Id).Week == Model.Week)
                                {
                                    visitorClass += " CurrentSelection";
                                }
                                else
                                {
                                    visitorClass += " PastSelection";
                                }
                            }
                            else
                            {
                                visitorClass += " NoSelection";
                            }

                            if (selectedTeams.Count(st => st.TeamId == matchup.HomeTeam.Id) > 0)
                            {
                                if (selectedTeams.Single(st => st.TeamId == matchup.HomeTeam.Id).Week == Model.Week)
                                {
                                    homeClass += " CurrentSelection";
                                }
                                else
                                {
                                    homeClass += " PastSelection";
                                }
                            }
                            else
                            {
                                homeClass += " NoSelection";
                            }

                            // if(DateTime.Compare(matchup.DateAndTime, DateTime.Now) <= 0)
                            if (Model.Week < 4)     //  this is temporary condition for testing functionality
                            {
                                if (selectedTeams.Count(st => st.TeamId == matchup.HomeTeam.Id) <= 0)
                                {
                                    homeClass += " PastGame";
                                }
                                if (selectedTeams.Count(st => st.TeamId == matchup.VisitorTeam.Id) <= 0)
                                {

                                    visitorClass += " PastGame";
                                }
                            }



                            <div class="row py-1 font-weight-bold">
                                <div class="col-3 col-md-2 col-xl-1 align-self-center">@matchup.DateAndTime.ToShortTimeString()</div>
                                <div class="col-4 col-xl-3 align-self-center">
                                    <div id="@matchup.VisitorTeam.Id" value="@matchup.VisitorTeam.Id.ToString()" class="row lead font-weight-bold select-team @visitorClass" style="border-style:solid;  background:@matchup.VisitorTeam.Colors.Split('|')[0]; color:@matchup.VisitorTeam.Colors.Split('|')[1];">

                                        <div class="col-12 d-none d-md-block">
                                            @matchup.VisitorTeam.Location
                                        </div>
                                        <div class="col-12">
                                            @matchup.VisitorTeam.Name
                                        </div>
                                    </div>
                                </div>
                                <div class="align-self-center lead font-weight-bold">
                                    @@
                                </div>
                                <div class="col-4 col-xl-3 align-self-center">
                                    <div id="@matchup.HomeTeam.Id" class="row lead font-weight-bold select-team @homeClass" style="border-style:solid; border-color:@matchup.HomeTeam.Colors.Split('|')[1]; background:@matchup.HomeTeam.Colors.Split('|')[0]; color:@matchup.HomeTeam.Colors.Split('|')[1];">
                                        <div class="col-12 d-none d-md-block">
                                            @matchup.HomeTeam.Location
                                        </div>
                                        <div class="col-12">
                                            @matchup.HomeTeam.Name
                                        </div>
                                    </div>
                                </div>


                            </div>
                        }
                    </div>
                </div>
                <hr />
            }
        }


    </div>
</div>
<script>
    $(".NoSelection").click(function () {
        if (!this.classList.contains('PastGame')) {
            //alert('beginning f()');
            $(".CurrentSelection").removeClass("CurrentSelection").addClass("NoSelection");
            $(this).removeClass("NoSelection").addClass("CurrentSelection");
            var pick = {};
            pick.LeagueId = @Model.LeagueId;
            pick.SeasonId = @Model.SeasonId;
            pick.Week = @Model.Week;
            pick.TeamId = parseInt(this.id);
            console.log(pick.LeagueId);
            console.log(pick.SeasonId);
            console.log(pick.Week);
            console.log(pick.TeamId);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("UpdatePick")',
                data: pick,
                success: function () {
                    console.log('Update Completed');
                }
            });

            //alert('so far so good');
        }
    });
</script>